<!---------------------------services---------------------------->

import { Injectable } from '@angular/core';
import {Http} from '@angular/http';
//import{BehaviorSubject} from 'rxjs/BehaviourSubject';
import {BehaviorSubject} from 'rxjs';
//import 'rxjs/add/operator/map';
//import { Observable, Subject, ReplaySubject, from, of, range } from 'rxjs';
//import { map, filter, switchMap } from 'rxjs/operators';
//import 'rxjs/add/operators/map';


@Injectable({
  providedIn: 'root'
})
export class MyService {

public user=new BehaviorSubject<string>("john");
cast=this.user.asObservable();  


setuser(newuser){
  this.user.next(newuser);
}

getuser(){
  return this.user.asObservable();
}
 
  obj={name:"sundar",rollno:"45"};
  success(){
    return "sucess";
  }


  constructor(private http:Http) { 
  
  }

  fetchdata(){
  
  // return this.http.get('http://jsonplaceholder.typicode.com/posts/1').map((Response)=>Response.json()).subscribe((data)=>data)
  return this.obj;
     }
}




<!-------------------------parent component services------------------>
import { Component, OnInit } from '@angular/core';
import{  FormsModule} from'@angular/forms';
import {MyService} from './../my.service';

@Component({
  selector: 'app-parentcomponent',
  templateUrl: './parentcomponent.component.html',
  styleUrls: ['./parentcomponent.component.css']
})
export class  ParentcomponentComponent implements OnInit {

  /*default:number=5000;
  data:number;
  amount:number;
  show:boolean=false;
  sendvalue(value:number){
    console.log(value);
    //this.data=value;
  }
 
  update(value:number){
    this.amount=value;
    this.show=true;
  }
*/
 name1:string;
  constructor(private userService:MyService) { 
    //this.name1=this.data.obj.name;
    //console.log(this.name1);

  }

  ngOnInit() {
  this.userService.cast.subscribe(name1=>this.name1=name1);
  console.log(this.name1);
  }
  
}
